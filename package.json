{
  "name": "@appril/crud",
  "version": "0.2.24",
  "description": "Appril CRUD Api and Generators",
  "author": "Slee Woo",
  "license": "MIT",
  "engines": {
    "node": ">=20.10",
    "npm": ">=10.2"
  },
  "files": [
    "pkg/*"
  ],
  "exports": {
    "./api": {
      "require": "./pkg/api/index.js",
      "types": "./pkg/api/index.d.ts"
    },
    "./client": {
      "default": "./pkg/client/index.js",
      "types": "./pkg/client/index.d.ts"
    }
  },
  "scripts": {
    "// ✨ linters": "",
    "lint": "biome lint ./lib",
    "// ✨ types": "",
    "tsc": "tsc --emitDeclarationOnly",
    "// ✨ builders": "",
    "esbuilder": "set -e; func() { e=$1; shift; esbuild lib/$e.ts --outfile=pkg/$e.js --bundle --platform=node --target=node20 --packages=external --loader:.tpl=text --sourcemap=inline $*; }; func",
    "// ✨ build api": "",
    "build:api": "npm run esbuilder api/index",
    "// ✨ build client": "",
    "build:client": "npm run esbuilder client/index",
    "// ✨ build": "",
    "prebuild:000": "mkdir -p pkg; find pkg -type f -exec rm -fv {} \\;",
    "prebuild:001": "npm run lint",
    "prebuild:002": "npm run tsc",
    "prebuild": "set -e; for i in 0 1 2; do npm run prebuild:00${i}; done",
    "build": "set -e; for e in api/index client/index; do npm run esbuilder $e; done"
  },
  "prettier": "@appril/prettier-config",
  "release-it": {
    "hooks": {
      "before:init": [
        "npm run build"
      ]
    }
  },
  "dependencies": {
    "@appril/pgts": "^0.2.9"
  },
  "devDependencies": {
    "@appril/configs": "^0.2.7",
    "@biomejs/biome": "^1.6.1",
    "@types/koa": "^2.15.0",
    "@types/koa__router": "^12.0.4",
    "@types/node": "^20.11.27",
    "esbuild": "^0.20.1",
    "knex": "^3.1.0",
    "koa": "^2.15.0",
    "release-it": "^17.1.1",
    "typescript": "^5.4.2"
  },
  "peerDependencies": {
    "@appril/core": "^0.2.12",
    "@appril/dbx": "^0.2.10",
    "@appril/more": "^0.2.8",
    "@appril/ui": "^0.2.6",
    "pinia": "^2.1.7",
    "zod": "^3.22.4",
    "zod-validation-error": "^3.0.3"
  }
}
